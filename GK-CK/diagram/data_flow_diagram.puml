@startuml Data Flow Diagram - Warehouse Management System

!theme plain
skinparam backgroundColor white
skinparam roundcorner 15

title üîÑ H·ªá th·ªëng Qu·∫£n l√Ω Kho H√†ng h√≥a - S∆° ƒë·ªì lu·ªìng d·ªØ li·ªáu

!define PROCESS_COLOR #E3F2FD
!define EXTERNAL_COLOR #FFF3E0  
!define DATASTORE_COLOR #F3E5F5

actor "üë§ Ng∆∞·ªùi d√πng\n(User)" as User EXTERNAL_COLOR
actor "üë®‚Äçüíº Qu·∫£n l√Ω kho\n(Manager)" as Manager EXTERNAL_COLOR

rectangle "üñ•Ô∏è Giao di·ªán ng∆∞·ªùi d√πng\n(User Interface)" as UI PROCESS_COLOR
rectangle "üîß X·ª≠ l√Ω nghi·ªáp v·ª•\n(Business Logic)" as BL PROCESS_COLOR  
rectangle "üóÉÔ∏è Truy c·∫≠p d·ªØ li·ªáu\n(Data Access)" as DA PROCESS_COLOR
rectangle "üîê Qu·∫£n l√Ω k·∫øt n·ªëi\n(Connection Manager)" as CM PROCESS_COLOR

cylinder "üóÑÔ∏è C∆° s·ªü d·ªØ li·ªáu MySQL\n(QuanLyKhoHang)" as DB DATASTORE_COLOR

' Lu·ªìng d·ªØ li·ªáu ch√≠nh
User --> UI : "1. Th√¥ng tin h√†ng h√≥a\n(Product Info)"
Manager --> UI : "2. Y√™u c·∫ßu b√°o c√°o\n(Report Request)"

UI --> BL : "3. D·ªØ li·ªáu ƒë√£ validate\n(Validated Data)"
UI <-- BL : "4. K·∫øt qu·∫£ x·ª≠ l√Ω\n(Processing Result)"

BL --> DA : "5. L·ªánh CRUD\n(CRUD Commands)"
BL <-- DA : "6. D·ªØ li·ªáu th√¥\n(Raw Data)"

DA --> CM : "7. Y√™u c·∫ßu k·∫øt n·ªëi\n(Connection Request)"
DA <-- CM : "8. K·∫øt n·ªëi DB\n(DB Connection)"

CM --> DB : "9. SQL Queries/Procedures"
CM <-- DB : "10. ResultSet/Status"

' Lu·ªìng ph·∫£n h·ªìi
UI --> User : "11. Th√¥ng b√°o k·∫øt qu·∫£\n(Result Notification)"
UI --> Manager : "12. B√°o c√°o th·ªëng k√™\n(Statistical Report)"

' Lu·ªìng d·ªØ li·ªáu chi ti·∫øt cho t·ª´ng ch·ª©c nƒÉng

package "üìã Qu·∫£n l√Ω Th·ª±c ph·∫©m" {
    User --> UI : "Th√¥ng tin th·ª±c ph·∫©m:\n- M√£ h√†ng\n- T√™n h√†ng\n- S·ªë l∆∞·ª£ng\n- ƒê∆°n gi√°\n- Ng√†y s·∫£n xu·∫•t\n- Ng√†y h·∫øt h·∫°n\n- Nh√† cung c·∫•p"
    
    UI --> BL : "Validate:\n- Ng√†y HH > Ng√†y SX\n- S·ªë l∆∞·ª£ng >= 0\n- ƒê∆°n gi√° > 0"
    
    BL --> DA : "SP_ThemThucPham()\nho·∫∑c INSERT direct"
    
    DA --> DB : "INSERT INTO HangHoa\nINSERT INTO ThucPham"
}

package "‚ö° Qu·∫£n l√Ω ƒêi·ªán m√°y" {
    User --> UI : "Th√¥ng tin ƒëi·ªán m√°y:\n- Th√¥ng tin c∆° b·∫£n\n- Th·ªùi gian b·∫£o h√†nh\n- C√¥ng su·∫•t"
    
    UI --> BL : "Validate:\n- B·∫£o h√†nh > 0\n- C√¥ng su·∫•t > 0"
    
    BL --> DA : "SP_ThemDienMay()\nho·∫∑c INSERT direct"
    
    DA --> DB : "INSERT INTO HangHoa\nINSERT INTO DienMay"
}

package "üè∫ Qu·∫£n l√Ω S√†nh s·ª©" {
    User --> UI : "Th√¥ng tin s√†nh s·ª©:\n- Th√¥ng tin c∆° b·∫£n\n- Nh√† s·∫£n xu·∫•t\n- Ng√†y nh·∫≠p kho"
    
    UI --> BL : "Validate:\n- Ng√†y nh·∫≠p <= H√¥m nay"
    
    BL --> DA : "SP_ThemSanhSu()\nho·∫∑c INSERT direct"
    
    DA --> DB : "INSERT INTO HangHoa\nINSERT INTO SanhSu"
}

package "üìä B√°o c√°o & Th·ªëng k√™" {
    Manager --> UI : "Y√™u c·∫ßu b√°o c√°o:\n- T·ªïng s·ªë l∆∞·ª£ng theo lo·∫°i\n- Trung b√¨nh t·ªìn kho\n- S·∫£n ph·∫©m s·∫Øp h·∫øt h·∫°n"
    
    UI --> BL : "X·ª≠ l√Ω request\nT√≠nh to√°n th·ªëng k√™"
    
    BL --> DA : "Queries ph·ª©c t·∫°p:\n- GROUP BY LoaiHang\n- AVG(SoLuongTon)\n- DATE calculations"
    
    DA --> DB : "SELECT v·ªõi JOIN\nAggregation functions\nStored procedures"
    
    DB --> DA : "D·ªØ li·ªáu t·ªïng h·ª£p"
    DA --> BL : "K·∫øt qu·∫£ th·ªëng k√™"
    BL --> UI : "B√°o c√°o ƒë√£ format"
    UI --> Manager : "üìà B√°o c√°o ho√†n ch·ªânh:\n- Charts/Tables\n- Summary data\n- Insights"
}

package "üîç T√¨m ki·∫øm & L·ªçc" {
    User --> UI : "Ti√™u ch√≠ t√¨m ki·∫øm:\n- Theo t√™n\n- Theo lo·∫°i\n- S·∫Øp h·∫øt h·∫°n"
    
    UI --> BL : "X√¢y d·ª±ng query\nƒêi·ªÅu ki·ªán WHERE"
    
    BL --> DA : "Dynamic queries\nParameterized statements"
    
    DA --> DB : "SELECT v·ªõi WHERE\nLIKE, BETWEEN\nDATE functions"
    
    DB --> DA : "Filtered ResultSet"
    DA --> BL : "List<HangHoa>"
    BL --> UI : "K·∫øt qu·∫£ ƒë√£ ph√¢n trang"
    UI --> User : "üìã Danh s√°ch k·∫øt qu·∫£"
}

' Ghi ch√∫ v·ªÅ lu·ªìng d·ªØ li·ªáu
note top of UI
    **Giao di·ªán ng∆∞·ªùi d√πng**
    - Swing GUI (KhoGUI)
    - Console Interface (Main)
    - Input validation
    - Result display
end note

note top of BL
    **X·ª≠ l√Ω nghi·ªáp v·ª•**
    - Business rules validation
    - Object creation (ThucPham, DienMay, SanhSu)
    - Data transformation
    - Error handling
end note

note top of DA
    **Truy c·∫≠p d·ªØ li·ªáu**
    - HangHoaDAO
    - CRUD operations
    - Stored procedure calls
    - Fallback mechanisms
end note

note top of CM
    **Qu·∫£n l√Ω k·∫øt n·ªëi**
    - DatabaseConnection (Singleton)
    - Connection pooling
    - Auto-reconnect
    - Properties management
end note

note top of DB
    **C∆° s·ªü d·ªØ li·ªáu**
    - Tables: HangHoa, ThucPham, DienMay, SanhSu
    - Stored Procedures
    - Views
    - Constraints & Indexes
end note

' Lu·ªìng l·ªói v√† x·ª≠ l√Ω ngo·∫°i l·ªá
User --> UI : "‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá"
UI --> User : "‚ö†Ô∏è Th√¥ng b√°o l·ªói validation"

DA --> BL : "‚ùå Database error"
BL --> UI : "üîÑ Retry ho·∫∑c Fallback"
UI --> User : "‚ö†Ô∏è Th√¥ng b√°o l·ªói h·ªá th·ªëng"

@enduml
